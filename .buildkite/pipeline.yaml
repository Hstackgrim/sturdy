steps:
  - label: ":coverage: :golang: Make sure OSS doesn't link Enterprise features"
    commands:
      - "./download && cd ./tmp_output"
      - | 
        set -eou pipefail
        [[ -z $(go list -f '{{ join .Deps "\n"}}' mash/cmd/api | grep mash | grep enterprise) ]] || exit 1

  - label: ":coverage: :golang: Make sure OSS doesn't link Cloud features"
    commands:
      - "./download && cd ./tmp_output"
      - | 
        set -eou pipefail
        [[ -z $(go list -f '{{ join .Deps "\n"}}' mash/cmd/api | grep mash | grep cloud) ]] || exit 1

  - label: ":coverage: :golang: Make sure Enterprise doesn't link Cloud features"
    commands:
      - "./download && cd ./tmp_output"
      - | 
        set -eou pipefail
        [[ -z $(go list -tags enterprise -f '{{ join .Deps "\n"}}' mash/cmd/api | grep mash | grep cloud) ]] || exit 1

  - label: ":docker: :golang: Run unit tests"
    commands:
      - "./download && cd ./tmp_output"
      - "docker-compose -f ci/docker-compose.yaml -f ci/unit/docker-compose.yaml up --build --exit-code-from runner"

  - label: ":docker: :yarn: Lint and test"
    commands:
      - "./download && cd ./tmp_output"
      - "export UID && export GID=$(id -g $(whoami)) && docker-compose -f ci/docker-compose.web.yaml up --build --exit-code-from web-runner"
 
