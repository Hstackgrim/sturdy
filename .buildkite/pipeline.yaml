steps:
  - label: ":coverage: :golang: Make sure OSS doesn't link Enterprise features"
    commands:
      - "./download && cd ./tmp_output/api"
      - |
        set -eou pipefail
        ENTERPRISE_FEATURES="$(go list -f '{{ join .Deps "\n"}}' getsturdy.com/api/cmd/api | grep getsturdy | grep enterprise)"
        [[ -z "$ENTERPRISE_FEATURES" ]] || (echo "$ENTERPRISE_FEATURES" && exit 1)

  - label: ":coverage: :golang: Make sure OSS doesn't link Cloud features"
    commands:
      - "./download && cd ./tmp_output/api"
      - |
        set -eou pipefail
        CLOUD_FEATURES="$(go list -f '{{ join .Deps "\n"}}' getsturdy.com/api/cmd/api | grep getsturdy | grep cloud)"
        [[ -z "$COULD_FEATUERS" ]] || (echo "$CLOUD_FEATURES" && exit 1)

  - label: ":coverage: :golang: Make sure Enterprise doesn't link Cloud features"
    commands:
      - "./download && cd ./tmp_output/api"
      - |
        set -eou pipefail
        CLOUD_FEATURES="$(go list -tags enterprise -f '{{ join .Deps "\n"}}' getsturdy.com/api/cmd/api | grep getsturdy | grep cloud)"
        [[ -z "$CLOUD_FEATURES" ]] || (echo "$CLOUD_FEATURES" && exit 1)

  - label: ":docker: :golang: Run unit tests"
    commands:
      - "./download && cd ./tmp_output"
      - "docker-compose -f ci/docker-compose.yaml -f ci/unit/docker-compose.yaml up --build --exit-code-from runner --remove-orphans"

  - label: ":docker: :yarn: Lint and test"
    commands:
      - "./download && cd ./tmp_output"
      - "export UID && export GID=$(id -g $(whoami)) && docker-compose -f ci/docker-compose.web.yaml up --build --exit-code-from web-runner --remove-orphans"

  # - label: ":docker: :golang: :yarn: Build oneliner (no push)"
  #   agents:
  #     queue: "arm"
  #   commands:
  #   - "./download && cd ./tmp_output"
  #   - "./scripts/build-upload-oneliner.sh"
