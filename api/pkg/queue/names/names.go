package names

import "strings"

type IncompleteQueueName string
type BroadcastQueuePublisherName string  // SNS Topics
type BroadcastQueueSubscriberName string // SQS Queue subscribed to a broadcast SNS topic
type QueueName string                    // SQS Queue where multiple instances are publishing/subscribing to the same queue

func (i IncompleteQueueName) String() string {
	return string(i)
}

// Names on the pattern of "dataType_eventName"
//
// SQS has a length limit of 80 characters.
//
// "production_codebase_garbageCollection_ip17231125156eunorth1computeinternal_dead" is 79 chars long
// The max autogenerated prefix ("production_") and suffix ("_ip123123123123eunorth1computeinternal_dead") is 11+43=55 chars
// The longest len allowed here is 25 chars.
const (
	NotificationUpdated               IncompleteQueueName = "notification_updated"
	WorkspaceUpdated                  IncompleteQueueName = "workspace_updated"
	CodebaseUpdated                   IncompleteQueueName = "codebase_updated"
	CodebaseGarbageCollection         IncompleteQueueName = "codebase_gc"
	CodebaseGitHubCloner              IncompleteQueueName = "codebase_githubCloner"
	CodebaseGitHubPullRequestImporter IncompleteQueueName = "codebase_githubPRimport"
	GithubWebhooks                    IncompleteQueueName = "github_webhooks"
	ViewSnapshot                      IncompleteQueueName = "view_snapshot"
	CITriggerQueue                    IncompleteQueueName = "ci_trigger"
	longestAllowedName                IncompleteQueueName = "xxxxxXXXXXxxxxxXXXXXxxxx" // To highlight how long a name can be
)

func BuildBroadcastQueueSubscriberName(prefix, hostname string, name IncompleteQueueName) BroadcastQueueSubscriberName {
	return BroadcastQueueSubscriberName(safeQueueName(prefix) + "_" + string(name) + "_" + safeQueueName(hostname))
}

func BuildQueueName(prefix, hostname string, name IncompleteQueueName) QueueName {
	return QueueName(safeQueueName(prefix) + "_" + string(name) + "_" + safeQueueName(hostname))
}

// BuildBroadcastQueuePublisherName builds names to be used by SNS topics
func BuildBroadcastQueuePublisherName(prefix string, name IncompleteQueueName) BroadcastQueuePublisherName {
	return BroadcastQueuePublisherName(safeQueueName(prefix) + "_" + string(name))
}

func safeQueueName(s string) string {
	var result strings.Builder
	for i := 0; i < len(s); i++ {
		b := s[i]
		if ('a' <= b && b <= 'z') ||
			('A' <= b && b <= 'Z') ||
			('0' <= b && b <= '9') {
			result.WriteByte(b)
		}
	}
	return result.String()
}
